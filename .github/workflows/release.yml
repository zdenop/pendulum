name: Release

on:
  push:
    tags:
      - '*.*.*'

jobs:

  Linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Get tag
      id: tag
      run: |
        echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
    - name: Building release
      run: |
        make linux_release
    - name: Upload distributions artifacts
      uses: actions/upload-artifact@v2
      with:
        name: pendulum-dist
        path: dist/wheelhouse

  MacOS:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10"]

    steps:
    - uses: actions/checkout@v2
    - name: Get tag
      id: tag
      run: |
        echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install and set up Poetry
      run: |
        curl -fsS https://install.python-poetry.org | python - --preview -y
    - name: Build distributions
      run: |
        source $HOME/.poetry/env
        poetry build -vvv
    - name: Upload distribution artifacts
      uses: actions/upload-artifact@v2
      with:
        name: pendulum-dist
        path: dist

  Windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10"]

    steps:
    - uses: actions/checkout@v2
    - name: Get tag
      id: tag
      shell: bash
      run: |
        echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install and setup Poetry
      run: |
        (Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | python - --preview -y
    - name: Build distributions
      run: |
        $env:Path += ";$env:Userprofile\.poetry\bin"
        poetry build -vvv
    - name: Upload distribution artifact
      uses: actions/upload-artifact@v2
      with:
        name: pendulum-dist
        path: dist

  Release:
    needs: [Linux, MacOS, Windows]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get tag
        id: tag
        run: |
          echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
      - name: Download distribution artifact
        uses: actions/download-artifact@master
        with:
          name: pendulum-dist
          path: dist
      - name: Install and set up Poetry
        run: |
          curl -fsS https://install.python-poetry.org | python - --preview -y
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Check distributions
        run: |
          ls -la dist
      - name: Publish to PyPI
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: |
          source $HOME/.poetry/env
          poetry publish
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false
